import { useState, useEffect } from 'react';
import Head from 'next/head';
import Image from 'next/image';

import Layout from '@components/Layout';
import Section from '@components/Section';
import Container from '@components/Container';
import Button from '@components/Button';
import FeatureList from '@components/FeatureList';
import Details from '@components/Details';
import Video from '@components/Video';
import Form from '@components/Form';

import styles from '@styles/pages/Home.module.scss'

export default function Home() {
  const [screenshot, updateScreenshot] = useState(null);
  const [isReady, updateIsReady] = useState(false);

  const screenshotUrl = screenshot && `${screenshot.folder.replace('public/', '')}/${screenshot.filename}`;

  /**
   * TODO: Set up endpoint to post tweet, should grab local image to upload based on path
   * TODO: Add validation to avoid tweets that are too long
   */

  useEffect(() => {
    if ( !screenshot ) return;

    (async function pollForImage() {
      const response = await fetch(screenshotUrl, {
        method: 'HEAD'
      });

      if ( !response.ok ) {
        setTimeout(() => pollForImage(), 1000);
        return;
      }

      updateIsReady(true);
    })()
  }, [screenshot]);

  async function handleOnSubmitScreenshot(e) {
    e.preventDefault();

    updateScreenshot(null);
    updateIsReady(false);

    const formData = {};

    Array.from(e.currentTarget.elements).forEach(field => {
      if ( !field.name ) return;
      formData[field.name] = field.value;
    });

    const streamData = {
      streamId: formData.streamId
    }

    const response = await fetch('/api/screenshot', {
      method: 'POST',
      body: JSON.stringify(streamData)
    });
    const { data } = await response.json();

    if ( response.status !== 200 ) {
      console.log('no')
      return;
    }

    updateScreenshot(data)
  }

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Section>
        <Container>
          <h1>
            Twitch Screenshot
          </h1>

          <div className={styles.twitch}>
            <div className={styles.forms}>
              <Form onSubmit={handleOnSubmitScreenshot}>
                <h2>Get Screenshot</h2>
                <p>
                  <label htmlFor="streamID">Stream ID (user / channel name)</label>
                  <input id="streamID" type="text" name="streamId" />
                </p>
                <p>
                  <Button>
                    { isReady ? 'Refresh' : 'Get Screenshot' }
                  </Button>
                </p>
              </Form>
              {screenshotUrl && (
                <Form onSubmit={handleOnSubmitScreenshot}>
                  <h2>Tweet</h2>
                  <p>
                    <label htmlFor="tweetMessage">Message</label>
                    <textarea id="tweetMessage" name="tweetMessage" />
                  </p>
                  <p>
                    <Button>Post</Button>
                  </p>
                </Form>
              )}

            </div>
            <div className={styles.preview}>
              <figure>
                {isReady && screenshotUrl && (
                  <img src={screenshotUrl} />
                )}
              </figure>
            </div>
          </div>
        </Container>
      </Section>
    </Layout>
  )
}
